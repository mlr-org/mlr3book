# Technical {#technical}

```{r 06-technical-001, include = F}
library(mlr3)
library(mlr3book)
```

This chapter provides an overview of technical details of the `r mlr3book::mlr_pkg("mlr3")` framework.

## Parallelization {#sec-technical-parallelization}

At first, some details about [Parallelization](#parallelization) and the usage of the `r mlr3book::cran_pkg("future")` are given.
Parallelization refers to the process of running multiple jobs simultaneously.
This process is employed to minimize the necessary computing power.
Algorithms consist of both sequential (non-parallelizable) and parallelizable parts.
Therefore, parallelization does not always alter performance in a positive substantial manner.
Summed up, this sub-chapter illustrates how and when to use parallelization in mlr3.

## Database Backends {#sec-technical-database-backends}

The section [Database Backends](#backends) describes how to work with database backends that `r mlr3book::mlr_pkg("mlr3")` supports.
Database backends can be helpful for large data processing which does not fit in memory or is stored natively in a database (e.g. SQLite).
Specifically when working with large data sets, or when undertaking numerous tasks simultaneously, it can be advantageous to interface out-of-memory data.
The section provides an illustration of how to implement [Database Backends](#backends) using of NYC flight data.

## Parameters {#sec-technical-parameters}

In the section [Parameters](#paradox) instructions are given on how to:

* define parameter sets for learners
* undertake parameter sampling
* apply parameter transformations

For illustrative purposes, this sub-chapter uses the `r mlr3book::mlr_pkg("paradox")` package, the successor of `r mlr3book::cran_pkg("ParamHelpers")`.

## Logging and Verbosity {#sec-technical-logging}

The sub-chapter on [Logging and Verbosity](#logging) shows how to change the most important settings related to logging.
In `r mlr3book::mlr_pkg("mlr3")` we use the `r mlr3book::cran_pkg("lgr")` package.
