on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: build-book

jobs:
  build-book:
    runs-on: ubuntu-latest
    container:
      image: mlrorgdocker/mlr3-book
      env:
        R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Install headless chromium
        run: quarto tools install chromium

      - name: Cache OpenML
        uses: actions/cache@v4
        id: openml-cache
        with:
          path: book/openml
          key: ${{ runner.os }}-openml-${{ hashFiles('./book/chapters/chapter11/large-scale_benchmarking.qmd') }}-${{hashFiles('./book/chapters/appendices/solutions_large-scale_benchmarking.qmd')}}
          restore-keys: ${{ runner.os }}-openml-

      - name: Render book
        run: quarto render book/ --cache-refresh --execute-debug

      - name: Add .lycheeignore
        run: cp .lycheeignore book/_book/.lycheeignore

      - name: Deploy netlify preview
        if: ${{ github.event_name == 'pull_request' }}
        uses: mlr-org/actions/quarto-netlify-preview@v1.3.0
        with:
          netlify_auth_token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify_site_id: ${{ secrets.NETLIFY_SITE_ID }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          path: book/_book
          netlify_url: mlr3book.netlify.app

      - name: Upload pdf book
        uses: actions/upload-artifact@v4
        with:
          name: mlr3book
          path: book/_book/Applied-Machine-Learning-Using-mlr3-in-R.pdf
          retention-days: 1

      - name: Deploy
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@v4.7.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: book/_book
          single-commit: true
