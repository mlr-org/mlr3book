on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 4 * * *"

name: mlr3book

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              os: ubuntu-20.04,
              r: "release",
              rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest",
            }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master
        with:
          pandoc-version: 2.11.3.1

      - name: Setup tinytex
        uses: r-lib/actions/setup-tinytex@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      # set date/week for use in cache creation
      # https://github.community/t5/GitHub-Actions/How-to-set-and-access-a-Workflow-variable/m-p/42970
      # - cache R packages daily
      - name: "[Cache] Prepare daily timestamp for cache"
        if: runner.os != 'Windows'
        id: date
        run: echo "::set-output name=date::$(date '+%d-%m')"

      - name: "[Cache] Cache R packages"
        if: runner.os != 'Windows'
        uses: pat-s/always-upload-cache@v2.1.0
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "20.04"), sep = "\n")')

      - name: Install dependencies
        run: make install

      - name: Build HTML
        run: make clean; make html

      - name: Build PDF
        run: make pdf

      - name: Deploy
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: bookdown/_book
          SINGLE_COMMIT: true
